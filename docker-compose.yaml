name: cnc-api

services:
  api:
    image: cnc-api
    build:
      context: .
      dockerfile: Dockerfile.api
      target: development
    depends_on:
      - postgresql
      - redis
    env_file:
      - core/.env
      - api/.env
      - .env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=postgresql
    volumes:
      - ./gcode_files:/app/gcode_files
    container_name: remote-cnc-api

  postgresql:
    image: postgres:16.1-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-datavolume:/var/lib/postgresql/data
    container_name: remote-cnc-postgresql

  testdb:
    image: postgres:16.1-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=cnc_db
    ports:
      - 5000:5432
    container_name: remote-cnc-testdb
    profiles: ["test"]

  adminer:
    image: adminer:4.8.1
    depends_on:
      - postgresql
    ports:
      - "8080:8080"
    container_name: remote-cnc-adminer

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    container_name: remote-cnc-redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      target: production
    command: celery --app app worker --loglevel=INFO --logfile=core/logs/celery.log
    depends_on:
      - redis
      - postgresql
    device_cgroup_rules:
      - 'c 188:* rmw'
    env_file:
      - ./core/.env
      - .env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=postgresql
    volumes:
      - ./gcode_files:/app/gcode_files
      - ./thumbnails:/app/thumbnails
      - ./core/logs:/app/core/logs
      # Devices
      - /dev:/dev
      # Devices information
      - /run/udev:/run/udev:ro
    container_name: remote-cnc-worker
    profiles: ["worker"]

  worker-sim:
    build:
      context: .
      dockerfile: Dockerfile.worker
      target: development
    command: celery --app app worker --loglevel=INFO --logfile=core/logs/celery.log
    depends_on:
      - redis
      - postgresql
    env_file:
      - ./core/.env
      - .env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=postgresql
      - GRBL_SIMULATION=TRUE
    volumes:
      - ./gcode_files:/app/gcode_files
      - ./thumbnails:/app/thumbnails
      - ./core/logs:/app/core/logs
    container_name: remote-cnc-worker-sim
    profiles: ["test", "simulator"]

  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    depends_on:
      - redis
    ports:
      - 5555:5555
    container_name: remote-cnc-flower

  ngrok:
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - api
    profiles: ["ngrok"]
    container_name: remote-cnc-ngrok

volumes:
  postgres-datavolume:
